<!--
$PostgreSQL: pgsql/doc/src/sgml/ref/create_domain.sgml,v 1.20.4.1 2005/05/02 01:56:16 neilc Exp $
PostgreSQL documentation
-->

<refentry id="SQL-CREATEDOMAIN">
 <refmeta>
  <refentrytitle id="sql-createdomain-title">CREATE DOMAIN</refentrytitle>
  <refmiscinfo>SQL - Comandos da Linguagem</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE DOMAIN</refname>
  <refpurpose>cria um domínio</refpurpose>
 </refnamediv>

 <indexterm zone="sql-createdomain">
  <primary>CREATE DOMAIN</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
CREATE DOMAIN <replaceable class="parameter">nome</replaceable> [AS] <replaceable class="parameter">tipo_de_dado</replaceable>
    [ DEFAULT <replaceable>expressão</replaceable> ]
    [ <replaceable class="parameter">restrição</replaceable> [ ... ] ]

onde <replaceable class="parameter">restrição</replaceable> é:

[ CONSTRAINT <replaceable class="parameter">nome_da_restrição</replaceable> ]
{ NOT NULL | NULL | CHECK (<replaceable class="parameter">expressão</replaceable>) }
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Descrição</title>

  <para>
   O comando <command>CREATE DOMAIN</command> cria um domínio de dados.
   O usuário que cria o domínio se torna o seu dono.
  </para>

  <para>
   Se o nome do esquema for fornecido (por exemplo, <literal>CREATE DOMAIN
   meu_esquema.meu_dominio ...</literal>), então o domínio é criado no
   esquema especificado, senão é criado no esquema corrente.
   O nome do domínio deve ser único entre os tipos e domínios existentes
   no esquema.
  </para>

  <para>
   Domínios são úteis para abstrair campos comuns entre tabelas em um único
   local para manutenção. Por exemplo, uma coluna de endereço de correio
   eletrônico pode ser usada em várias tabelas, todas com as mesmas
   propriedades. Em vez de definir as restrições em cada tabela individualmente,
   deve ser definido e utilizado um domínio.
  </para>
 </refsect1>

 <refsect1>
  <title>Parâmetros</title>

    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">nome</replaceable></term>
      <listitem>
       <para>
        O nome (opcionalmente qualificado pelo esquema) do domínio a ser criado.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">tipo_de_dado</replaceable></term>
      <listitem>
       <para>
        O tipo de dado subjacente do domínio, podendo incluir especificadores de
        matrizes (<literal>arrays</literal>).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>DEFAULT <replaceable>expressão</replaceable></literal></term>

      <listitem>
       <para>
        A cláusula <literal>DEFAULT</literal> especifica o valor padrão para as
        colunas com o tipo de dado do domínio. O valor é qualquer expressão sem
        variável (<literal>variable-free</literal>) (mas subconsultas não são
        permitidas).
        O tipo de dado da expressão padrão deve corresponder ao tipo de dado
        do domínio. Se o valor padrão não for especificado, então
        o valor nulo se torna o valor padrão.
       </para>

       <para>
        A expressão padrão é usada em toda operação de inserção que não
        especifica valor para a coluna. Se for definido o valor padrão para uma
        determinada coluna, este substitui o valor padrão associado ao domínio.
        Por sua vez, o valor padrão para o domínio substitui o valor padrão
        associado ao tipo de dado subjacente.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>CONSTRAINT <replaceable class="parameter">nome_da_restrição</replaceable></literal></term>
      <listitem>
       <para>
        Um nome opcional para a restrição. Se não for especificado,
        o sistema gera um nome.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>NOT NULL</literal></term>
      <listitem>
       <para>
        Os valores deste domínio não podem ser nulos.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>NULL</literal></term>
      <listitem>
       <para>
        Os valores deste domínio podem ser nulos. Este é o padrão.
       </para>

       <para>
        Esta cláusula tem somente a finalidade de manter a compatibilidade com
        os bancos de dados SQL fora do padrão. Seu uso é desaconselhado nos
        novos aplicativos.
       </para>
      </listitem>
     </varlistentry>

   <varlistentry>
    <term><literal>CHECK (<replaceable class="parameter">expressão</replaceable>)</literal></term>
    <listitem>
     <para>
      A cláusula <literal>CHECK</literal> especifica as restrições de
      integridade, ou testes, que os valores do domínio devem satisfazer.
      Cada restrição deve ser uma expressão que produz um resultado booleano.
      Deve ser utilizado o nome <literal>VALUE</literal> para fazer referência
      ao valor sendo testado.
     </para>

     <para>
      Atualmente as expressões <literal>CHECK</literal> não podem conter
      subconsultas, nem fazer referências a outras variáveis além de
      <literal>VALUE</literal>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Exemplos</title>

  <para>
   Este exemplo cria o tipo de dado <type>us_postal_code</type> (código postal
   americano), e usa este tipo na definição da tabela. É utilizado um teste de
   expressão regular para verificar se o valor se parece com um código postal
   americano válido.

<programlisting>
CREATE DOMAIN us_postal_code AS TEXT
CHECK(
   VALUE ~ '^\\d{5}$'
OR VALUE ~ '^\\d{5}-\\d{4}$'
);

CREATE TABLE us_snail_addy (
  address_id SERIAL NOT NULL PRIMARY KEY
, street1 TEXT NOT NULL
, street2 TEXT
, street3 TEXT
, city TEXT NOT NULL
, postal us_postal_code NOT NULL
);
</programlisting>
  </para>
 </refsect1>

 <refsect1 id="SQL-CREATEDOMAIN-compatibility">
  <title>Compatibilidade</title>

  <para>
   O comando <command>CREATE DOMAIN</command> está em conformidade
   com o padrão SQL.
  </para>
 </refsect1>

 <refsect1 id="SQL-CREATEDOMAIN-see-also">
  <title>Consulte também</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterdomain" endterm="sql-alterdomain-title"></member>
   <member><xref linkend="sql-dropdomain" endterm="sql-dropdomain-title"></member>
  </simplelist>
 </refsect1>

</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
