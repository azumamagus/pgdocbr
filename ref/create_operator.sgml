<!--
$PostgreSQL: pgsql/doc/src/sgml/ref/create_operator.sgml,v 1.44 2005/01/04 00:39:53 tgl Exp $
PostgreSQL documentation
-->

<refentry id="SQL-CREATEOPERATOR">
 <refmeta>
  <refentrytitle id="sql-createoperator-title">CREATE OPERATOR</refentrytitle>
  <refmiscinfo>SQL - Comandos da Linguagem</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE OPERATOR</refname>
  <refpurpose>cria um operador</refpurpose>
 </refnamediv>

 <indexterm zone="sql-createoperator">
  <primary>CREATE OPERATOR</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
CREATE OPERATOR <replaceable>nome</replaceable> (
    PROCEDURE = <replaceable class="parameter">nome_da_função</replaceable>
    [, LEFTARG = <replaceable class="parameter">tipo_à_esquerda</replaceable> ] [, RIGHTARG = <replaceable class="parameter">tipo_à_direita</replaceable> ]
    [, COMMUTATOR = <replaceable class="parameter">comutador_do_operador</replaceable> ] [, NEGATOR = <replaceable class="parameter">negador_do_operador</replaceable> ]
    [, RESTRICT = <replaceable class="parameter">função_de_seletividade_da_restrição</replaceable> ] [, JOIN = <replaceable class="parameter">função_de_seletividade_da_junção</replaceable> ]
    [, HASHES ] [, MERGES ]
    [, SORT1 = <replaceable class="parameter">operador_de_ordenação_à_esquerda</replaceable> ] [, SORT2 = <replaceable class="parameter">operador_de_ordenação_à_direita</replaceable> ]
    [, LTCMP = <replaceable class="parameter">operador_menor_que</replaceable> ] [, GTCMP = <replaceable class="parameter">operador_maior_que</replaceable> ]
)
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Descrição</title>

  <para>
   O comando <command>CREATE OPERATOR</command> define o novo
   operador, <replaceable class="parameter">nome</replaceable>.
   O usuário que define o operador se torna seu dono. Se for fornecido
   o nome do esquema, então o operador será criado no esquema
   especificado, senão será criado no esquema corrente.
  </para>

  <para>
   O nome do operador é uma seqüência com até <symbol>NAMEDATALEN</symbol>-1
   (63, por padrão) caracteres da seguinte lista:
<literallayout>
+ - * / &lt; &gt; = ~ ! @ # % ^ &amp; | ` ?
</literallayout>

   Existem algumas restrições na escolha do nome:
   <itemizedlist>
    <listitem>
     <para>
     As seqüências <literal>--</literal> e <literal>/*</literal> não podem
     ocorrer em nenhum lugar no nome do operador, uma vez que são consideradas
     início de comentário.
     </para>
    </listitem>
    <listitem>
     <para>
     Um nome de operador multicaractere não pode terminar por
     <literal>+</literal> ou por <literal>-</literal>,
     a não ser que o nome também contenha pelo menos um destes caracteres:
<literallayout>
~ ! @ # % ^ &amp; | ` ?
</literallayout>
     Por exemplo, <literal>@-</literal> é um nome de operador permitido,
     mas <literal>*-</literal> não é. Esta restrição permite ao
     <productname>PostgreSQL</productname> analisar comandos em conformidade com
     o SQL sem requerer espaços entre os elementos (<literal>tokens</literal>).
     </para>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   O operador <literal>!=</literal> é mapeado para
   <literal>&lt;&gt;</literal> na entrada e,
   portanto, estes dois nomes são sempre equivalentes.
  </para>

  <para>
   Com relação a <literal>LEFTARG</literal> e <literal>RIGHTARG</literal>,
   pelo menos um dos dois deve ser definido; para operadores binários os dois
   devem ser definidos. Para operadores unários direito somente
   <literal>LEFTARG</literal> deve ser definido, enquanto que para operadores
   unários esquerdo somente <literal>RIGHTARG</literal> deve ser definido.
  </para>

  <para>
   O procedimento <replaceable class="parameter">nome_da_função</replaceable>
   deve ser previamente definido utilizando o comando
   <command>CREATE FUNCTION</command>, e deve estar definido para aceitar o
   número correto de argumentos (um ou dois) dos tipos indicados.
  </para>

  <para>
   As outras cláusulas são cláusulas de otimização de operador opcionais.
   Seus significados estão descritos na <xref linkend="xoper-optimization">.
  </para>
 </refsect1>

 <refsect1>
  <title>Parâmetros</title>

    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">nome</replaceable></term>
      <listitem>
       <para>
        O nome do operador a ser definido. Veja acima os caracteres permitidos.
        O nome pode ser qualificado pelo esquema como, por exemplo,
        <literal>CREATE OPERATOR meu_esquema.+ (...)</literal>; caso não seja,
        o operador será criado no esquema corrente. Dois operadores
        no mesmo esquema podem possuir o mesmo nome se operarem sobre
        tipos de dado diferentes. Isto se chama
        <firstterm>sobrecarga</firstterm> (<literal>overload</literal>).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">nome_da_função</replaceable></term>
      <listitem>
       <para>
        A função utilizada para implementar este operador.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">tipo_à_esquerda</replaceable></term>
      <listitem>
       <para>
        O tipo de dado do operando à esquerda do operador, se houver.
        Esta opção deve ser omitida em operadores unário esquerdo.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">tipo_à_direita</replaceable></term>
      <listitem>
       <para>
        O tipo de dado do operando à direita do operador, se houver.
        Esta opção deve ser omitida em operadores unário direito.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">comutador_do_operador</replaceable></term>
      <listitem>
       <para>
        O comutador deste operador.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">negador_do_operador</replaceable></term>
      <listitem>
       <para>
        O negador deste operador.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">função_de_seletividade_da_restrição</replaceable></term>
      <listitem>
       <para>
        A função que estima a seletividade da restrição para este operador.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">função_de_seletividade_da_junção</replaceable></term>
      <listitem>
       <para>
        A função que estima a seletividade da junção para este operador.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>HASHES</literal></term>
      <listitem>
       <para>
       Indica que este operador pode suportar uma junção por <literal>hash</literal>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>MERGES</literal></term>
      <listitem>
       <para>
       Indica que este operador pode suportar uma junção por mesclagem.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">operador_de_ordenação_à_esquerda</replaceable></term>
      <listitem>
       <para>
        Se este operador puder suportar uma junção por mesclagem, o operador
        menor-que que classifica o tipo de dado à esquerda deste operador.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">operador_de_ordenação_à_direita</replaceable></term>
      <listitem>
       <para>
        Se este operador puder suportar uma junção por mesclagem, o operador
        menor-que que classifica o tipo de dado à direita deste operador.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">operador_menor_que</replaceable></term>
      <listitem>
       <para>
        Se este operador puder suportar uma junção por mesclagem, o operador
        menor-que que compara os tipos de dado de entrada deste operador.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">operador_maior_que</replaceable></term>
      <listitem>
       <para>
        Se este operador puder suportar uma junção por mesclagem, o operador
        maior-que que compara os tipos de dado de entrada deste operador.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>

  <para>
   Para usar um nome de operador qualificado pelo esquema em
   <replaceable class="parameter">comutador_do_operador</replaceable>,
   ou nos demais argumentos opcionais, deve ser utilizada a sintaxe
   de <literal>OPERATOR()</literal> como, por exemplo,
<programlisting>
COMMUTATOR = OPERATOR(meu_esquema.===) ,
</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Observações</title>

  <para>
   Consulte a <xref linkend="xoper"> para obter informações adicionais.
  </para>

  <para>
   Utilize o comando
   <xref linkend="sql-dropoperator" endterm="sql-dropoperator-title">
   para remover do banco de dados operadores definidos pelo usuário.
   Utilize o comando
   <xref linkend="sql-alteroperator" endterm="sql-alteroperator-title">
   para modificar os operadores no banco de dados.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemplos</title>

  <para>
   O comando abaixo define um novo operador, <literal>area-equality</literal>
   (igualdade de área), para o tipo de dado <type>box</type>:
<programlisting>
CREATE OPERATOR === (
    LEFTARG = box,
    RIGHTARG = box,
    PROCEDURE = area_equal_procedure,
    COMMUTATOR = ===,
    NEGATOR = !==,
    RESTRICT = area_restriction_procedure,
    JOIN = area_join_procedure,
    HASHES,
    SORT1 = &lt;&lt;&lt;,
    SORT2 = &lt;&lt;&lt;
    -- Uma vez que os operadores de classificação foram fornecidos, MERGES está envolvido.
    -- LTCMP e GTCMP são assumidos como sendo &lt; e &gt;, respectivamente
);
</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilidade</title>

  <para>
   O comando <command>CREATE OPERATOR</command>
   é uma extensão do <productname>PostgreSQL</productname>.
   O padrão SQL não trata de operadores definidos pelo usuário.
  </para>
 </refsect1>

 <refsect1>
  <title>Consulte também</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alteroperator" endterm="sql-alteroperator-title"></member>
   <member><xref linkend="sql-createopclass" endterm="sql-createopclass-title"></member>
   <member><xref linkend="sql-dropoperator" endterm="sql-dropoperator-title"></member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
