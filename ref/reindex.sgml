<!--
$PostgreSQL: pgsql/doc/src/sgml/ref/reindex.sgml,v 1.25.4.1 2005/01/22 23:23:53 momjian Exp $
PostgreSQL documentation
-->

<refentry id="SQL-REINDEX">
 <refmeta>
  <refentrytitle id="SQL-REINDEX-TITLE">REINDEX</refentrytitle>
  <refmiscinfo>SQL - Comandos da Linguagem</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>REINDEX</refname>
  <refpurpose>reconstrói índices</refpurpose>
 </refnamediv>

 <indexterm zone="sql-reindex">
  <primary>REINDEX</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
REINDEX { DATABASE | TABLE | INDEX } <replaceable class="parameter">nome</replaceable> [ FORCE ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Descrição</title>

  <para>
   O comando <command>REINDEX</command> reconstrói um índice baseado nos dados
   armazenados na tabela do índice, substituindo a cópia antiga do índice.
   Existem dois motivos principais para utilizar o comando
   <command>REINDEX</command>:

   <itemizedlist>
    <listitem>
     <para>
      O índice está corrompido, e não contém mais dados válidos.
      Embora na teoria esta situação nunca deva ocorrer, na
      prática os índices podem ficar corrompidos por causa de erros de
      programação ou falhas nos equipamentos.
      O comando <command>REINDEX</command> provê um método de recuperação.
     </para>
    </listitem>

    <listitem>
     <para>
      O índice em questão contém muitas páginas de índice mortas que não estão
      sendo reutilizadas. Esta situação pode acontecer com índices
      <literal>B-tree</literal> no <productname>PostgreSQL</productname>
      sob certos padrões de acesso.
      O comando <command>REINDEX</command> fornece uma maneira para reduzir o
      consumo de espaço do índice através da escrita de uma nova versão
      do índice sem as páginas mortas. Consulte a
      <xref linkend="routine-reindex"> para obter informações adicionais.
     </para>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1>
  <title>Parâmetros</title>

  <variablelist>
   <varlistentry>
    <term><literal>DATABASE</literal></term>
    <listitem>
     <para>
      Reconstrói todos os índices do sistema do banco de dados especificado.
      Os índices das tabelas dos usuários não são processados. Também, os
      índices nos catálogos do sistema compartilhados são pulados,
      exceto no modo autônomo (veja abaixo).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>TABLE</literal></term>
    <listitem>
     <para>
      Reconstrói todos os índices da tabela especificada. Se a tabela possuir
      uma tabela secundária <quote>TOAST</quote>, esta também é reindexada.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>INDEX</literal></term>
    <listitem>
     <para>
      Reconstrói o índice especificado.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nome</replaceable></term>
    <listitem>
     <para>
      O nome do banco de dados, tabela ou índice a ser reindexado.
      Os nomes das tabelas e dos índices podem ser qualificados pelo esquema.
      Atualmente o comando <command>REINDEX DATABASE</command> pode reindexar apenas
      o banco de dados corrente e, por isso, seu parâmetro deve corresponder ao
      nome do banco de dados corrente.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>FORCE</literal></term>
    <listitem>
     <para>
      Esta é uma opção obsoleta; se for especificada será ignorada.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Observações</title>

  <para>
   Havendo suspeita que um índice de uma tabela do usuário está corrompido, é
   possível simplesmente reconstruir este índice, ou todos os índices da tabela,
   usando o comando <command>REINDEX INDEX</command> ou o comando
   <command>REINDEX TABLE</command>.
  </para>

  <para>
   A situação fica mais difícil quando é necessário recuperar um índice
   corrompido de uma tabela do sistema. Neste caso é importante para o
   sistema não ter usado nenhum dos índices suspeitos
   (Sem dúvida, neste tipo de cenário pode acontecer que o processo servidor
   caia tão logo a inicialização comece por depender de índices corrompidos).
   Para recuperar com segurança o servidor deve ser inicializado
   com a opção <option>-P</option>, que impede a utilização
   de índice para procura em catálogo do sistema.
  </para>

  <para>
   Uma forma de fazer, é parar o postmaster e inicializar o servidor
   <productname>PostgreSQL</productname> autônomo com a opção
   <option>-P</option> incluída na linha de comando.
   Em seguida pode ser executado <command>REINDEX DATABASE</command>,
   <command>REINDEX TABLE</command> ou <command>REINDEX INDEX</command>,
   dependendo de quanto se deseja reconstruir. Em caso de dúvida deve ser usado
   <command>REINDEX DATABASE</command> para selecionar a reconstrução de todos
   os índices do sistema no banco de dados. Depois a sessão do servidor autônomo
   deve ser encerrada, e reiniciado o servidor normal.
   Consulte a página de referência do <xref linkend="app-postgres">
   para obter informações adicionais sobre como interagir com a interface
   do servidor autônomo.
  </para>

  <para>
   Como alternativa, pode ser iniciada uma sessão normal do servidor com a opção
   <option>-P</option> incluída nas opções de linha de comando.
   O método para se fazer isto varia entre clientes, mas em todos os
   clientes baseados na biblioteca <application>libpq</application> é possível
   definir a variável de ambiente <envar>PGOPTIONS</envar> com o valor
   <literal>-P</literal> antes de iniciar o cliente. Deve ser observado que
   embora este método não requeira o bloqueio dos outros clientes, ainda assim
   é razoável evitar que outros usuários se conectem ao banco de dados
   danificado até o término dos reparos.
  </para>

  <para>
   Havendo suspeita que algum dos índices dos catálogos do sistema
   compartilhados esteja corrompido (<structname>pg_database</structname>,
   <structname>pg_group</structname>, <structname>pg_shadow</structname>
   ou <structname>pg_tablespace</structname>),
   então o servidor autônomo deve ser usado para fazer o reparo.
   O comando <command>REINDEX</command> não processa os catálogos compartilhados
   no modo multiusuário.
  </para>

  <para>
   Para todos os índices, exceto os catálogos do sistema compartilhados, o
   comando <command>REINDEX</command> é seguro quanto à queda e transação
   (<literal>crash-safe</literal> e <literal>transaction-safe</literal>).
   O comando <command>REINDEX</command> não é seguro quanto à queda para os
   índices compartilhados, e por esse motivo não é permitido durante a operação
   normal. Se uma falha ocorrer durante a reindexação de um destes catálogos no
   modo autônomo, não será possível reiniciar o servidor normal até o problema
   ser resolvido (O sintoma típico de um índice compartilhado reconstruído
   parcialmente são erros <quote><literal>index is not a btree</literal></quote>).
  </para>

  <para>
   O comando <command>REINDEX</command> é semelhante a remover e recriar o
   índice, porque o conteúdo do índice é reconstruído a partir do início.
   Entretanto, as considerações sobre o bloqueio são bem diferentes.
   O comando <command>REINDEX</command> bloqueia a escrita mas não a leitura da
   tabela que está associado.
   Também obtém um bloqueio exclusivo do índice específico sendo processado,
   que bloqueia leituras que tentam utilizar o índice.
   Diferentemente, o comando <command>DROP INDEX</command> obtém um bloqueio exclusivo
   momentâneo da tabela que está associado, bloqueando tanto a escrita como a
   leitura.
   O comando <command>CREATE INDEX</command> subseqüente bloqueia a escrita mas não a
   leitura; uma vez que o índice não está presente, nenhuma leitura vai tentar
   utilizá-lo, significando que não haverá bloqueios mas que as leituras podem
   ser forçadas a fazer varreduras seqüenciais dispendiosas.
   Outro ponto importante é que o enfoque remover/criar invalida todos os
   planos de comando no <literal>cache</literal> que usam o índice,
   enquanto o comando <command>REINDEX</command> não.
  </para>

  <para>
   Antes do <productname>PostgreSQL</productname> 7.4, o comando
   <command>REINDEX TABLE</command> não processava automaticamente as tabelas
   <literal>TOAST</literal> e, portanto, estas tinham de ser reindexadas através
   de comandos separados. Isto ainda é possível, porém redundante.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemplos</title>

  <para>
   Recriar os índices da tabela <literal>minha_tabela</literal>:

<programlisting>
REINDEX TABLE minha_tabela;
</programlisting>
  </para>

  <para>
   Reconstruir um único índice:

<programlisting>
REINDEX INDEX meu_indice;
</programlisting>
  </para>

  <para>
   Reconstruir todos os índices do sistema de um determinado banco de dados,
   sem confiar que estejam válidos:

<programlisting>
$ <userinput>export PGOPTIONS="-P"</userinput>
$ <userinput>psql bd_danificado</userinput>
...
bd_danificado=&gt; REINDEX DATABASE bd_danificado;
bd_danificado=&gt; \q
</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilidade</title>

  <para>
   Não existe o comando <command>REINDEX</command> no padrão SQL.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
